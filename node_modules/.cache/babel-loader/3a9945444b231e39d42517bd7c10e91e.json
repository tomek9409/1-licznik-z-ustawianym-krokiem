{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kolpa\\\\Documents\\\\reactjs\\\\counter-app\\\\src\\\\Counter.js\";\nimport React, { Component } from \"react\";\nimport \"./Counter.css\";\nimport Display from \"./Display\";\nimport ButtonsPanel from \"./ButtonsPanel\"; // import Clock from \"./Clock\";\n\nimport ClockFunctional from \"./ClockFunctional\";\nimport Step from \"./Step\";\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeValue = action => {\n      this.setState((prevState, prevProps) => {\n        let currentCounterValue = prevState.counterValue;\n        let currentStepValue = prevState.stepValue;\n\n        if (action === \"add\") {\n          currentCounterValue = currentCounterValue += currentStepValue;\n        } else if (action === \"reinit\") {\n          currentCounterValue = prevProps.initValue;\n        } else {\n          currentCounterValue = 0;\n        }\n\n        return {\n          counterValue: currentCounterValue\n        };\n      });\n    };\n\n    this.toogleClock = () => {\n      this.setState(prevState => {\n        return {\n          showClock: !prevState.showClock\n        };\n      });\n    };\n\n    this.changeStep = step => {\n      this.setState({\n        stepValue: parseFloat(step)\n      });\n    };\n\n    this.state = {\n      counterValue: this.props.initValue,\n      showClock: true,\n      stepValue: 5\n    };\n  }\n\n  render() {\n    let clockElement = \"\";\n\n    if (this.state.showClock) {\n      // clockElement = <Clock toogleClockMethod={this.toogleClock} />;\n      clockElement = /*#__PURE__*/React.createElement(ClockFunctional, {\n        toogleClockMethod: this.toogleClock,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 22\n        }\n      });\n    } else {\n      clockElement = /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.toogleClock,\n        className: \"show-clock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, \"Show Clock\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"counter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, \"Licznik:\", /*#__PURE__*/React.createElement(Display, {\n      displayValue: this.state.counterValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ButtonsPanel, {\n      buttonMethod: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Step, {\n      stepValue: this.stepValue,\n      updateStep: this.changeStep,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), clockElement);\n  }\n\n}\n\nexport default Counter; // function Counter(props) {\n//   let randomNumber = Math.floor(Math.random() * (108 - 1 + 1) + 1);\n//   return (\n//     <div className=\"counter\">\n//       Counter:\n//       <span className=\"value\">{props.initValue}</span>\n//     </div>\n//   );\n// }\n// export default Counter;","map":{"version":3,"sources":["C:/Users/kolpa/Documents/reactjs/counter-app/src/Counter.js"],"names":["React","Component","Display","ButtonsPanel","ClockFunctional","Step","Counter","constructor","props","changeValue","action","setState","prevState","prevProps","currentCounterValue","counterValue","currentStepValue","stepValue","initValue","toogleClock","showClock","changeStep","step","parseFloat","state","render","clockElement"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CACA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAC9BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,WAVmB,GAUJC,MAAD,IAAY;AACxB,WAAKC,QAAL,CAAc,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACtC,YAAIC,mBAAmB,GAAGF,SAAS,CAACG,YAApC;AACA,YAAIC,gBAAgB,GAAGJ,SAAS,CAACK,SAAjC;;AAEA,YAAIP,MAAM,KAAK,KAAf,EAAsB;AACpBI,UAAAA,mBAAmB,GAAGA,mBAAmB,IAAIE,gBAA7C;AACD,SAFD,MAEO,IAAIN,MAAM,KAAK,QAAf,EAAyB;AAC9BI,UAAAA,mBAAmB,GAAGD,SAAS,CAACK,SAAhC;AACD,SAFM,MAEA;AACLJ,UAAAA,mBAAmB,GAAG,CAAtB;AACD;;AACD,eAAO;AACLC,UAAAA,YAAY,EAAED;AADT,SAAP;AAGD,OAdD;AAeD,KA1BkB;;AAAA,SA4BnBK,WA5BmB,GA4BL,MAAM;AAClB,WAAKR,QAAL,CAAeC,SAAD,IAAe;AAC3B,eAAO;AACLQ,UAAAA,SAAS,EAAE,CAACR,SAAS,CAACQ;AADjB,SAAP;AAGD,OAJD;AAKD,KAlCkB;;AAAA,SAoCnBC,UApCmB,GAoCLC,IAAD,IAAU;AACrB,WAAKX,QAAL,CAAc;AAAEM,QAAAA,SAAS,EAAEM,UAAU,CAACD,IAAD;AAAvB,OAAd;AACD,KAtCkB;;AAGjB,SAAKE,KAAL,GAAa;AACXT,MAAAA,YAAY,EAAE,KAAKP,KAAL,CAAWU,SADd;AAEXE,MAAAA,SAAS,EAAE,IAFA;AAGXH,MAAAA,SAAS,EAAE;AAHA,KAAb;AAKD;;AAgCDQ,EAAAA,MAAM,GAAG;AACP,QAAIC,YAAY,GAAG,EAAnB;;AACA,QAAI,KAAKF,KAAL,CAAWJ,SAAf,EAA0B;AACxB;AACAM,MAAAA,YAAY,gBAAG,oBAAC,eAAD;AAAiB,QAAA,iBAAiB,EAAE,KAAKP,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AACD,KAHD,MAGO;AACLO,MAAAA,YAAY,gBACV;AAAM,QAAA,OAAO,EAAE,KAAKP,WAApB;AAAiC,QAAA,SAAS,EAAC,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAKD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEE,oBAAC,OAAD;AAAS,MAAA,YAAY,EAAE,KAAKK,KAAL,CAAWT,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,YAAD;AAAc,MAAA,YAAY,EAAE,KAAKN,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE,KAAKQ,SAAtB;AAAiC,MAAA,UAAU,EAAE,KAAKI,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKGK,YALH,CADF;AASD;;AA9D6B;;AAiEhC,eAAepB,OAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Counter.css\";\r\nimport Display from \"./Display\";\r\nimport ButtonsPanel from \"./ButtonsPanel\";\r\n// import Clock from \"./Clock\";\r\nimport ClockFunctional from \"./ClockFunctional\";\r\nimport Step from \"./Step\";\r\n\r\nclass Counter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      counterValue: this.props.initValue,\r\n      showClock: true,\r\n      stepValue: 5,\r\n    };\r\n  }\r\n\r\n  changeValue = (action) => {\r\n    this.setState((prevState, prevProps) => {\r\n      let currentCounterValue = prevState.counterValue;\r\n      let currentStepValue = prevState.stepValue;\r\n\r\n      if (action === \"add\") {\r\n        currentCounterValue = currentCounterValue += currentStepValue;\r\n      } else if (action === \"reinit\") {\r\n        currentCounterValue = prevProps.initValue;\r\n      } else {\r\n        currentCounterValue = 0;\r\n      }\r\n      return {\r\n        counterValue: currentCounterValue,\r\n      };\r\n    });\r\n  };\r\n\r\n  toogleClock = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        showClock: !prevState.showClock,\r\n      };\r\n    });\r\n  };\r\n\r\n  changeStep = (step) => {\r\n    this.setState({ stepValue: parseFloat(step) });\r\n  };\r\n\r\n  render() {\r\n    let clockElement = \"\";\r\n    if (this.state.showClock) {\r\n      // clockElement = <Clock toogleClockMethod={this.toogleClock} />;\r\n      clockElement = <ClockFunctional toogleClockMethod={this.toogleClock} />;\r\n    } else {\r\n      clockElement = (\r\n        <span onClick={this.toogleClock} className=\"show-clock\">\r\n          Show Clock\r\n        </span>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"counter\">\r\n        Licznik:\r\n        <Display displayValue={this.state.counterValue} />\r\n        <ButtonsPanel buttonMethod={this.changeValue} />\r\n        <Step stepValue={this.stepValue} updateStep={this.changeStep} />\r\n        {clockElement}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n\r\n// function Counter(props) {\r\n//   let randomNumber = Math.floor(Math.random() * (108 - 1 + 1) + 1);\r\n\r\n//   return (\r\n//     <div className=\"counter\">\r\n//       Counter:\r\n//       <span className=\"value\">{props.initValue}</span>\r\n//     </div>\r\n//   );\r\n// }\r\n// export default Counter;\r\n"]},"metadata":{},"sourceType":"module"}